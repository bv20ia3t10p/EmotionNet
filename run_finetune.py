#!/usr/bin/env python3\n\"\"\"\nConvenient Fine-tuning Runner\nRuns fine-tuning with optimized parameters based on successful original training.\n\"\"\"\n\nimport subprocess\nimport sys\nimport os\n\ndef main():\n    # Fine-tuning command with optimized parameters\n    cmd = [\n        sys.executable, \"finetune.py\",\n        \"--checkpoint_path\", \"checkpoints/best_model.pth\",\n        \"--finetune_name\", \"v2_optimized\",\n        \"--data_dir\", \"./FERPlus\",\n        \"--epochs\", \"50\",\n        \"--batch_size\", \"64\",\n        \"--num_workers\", \"8\",\n        \"--lr\", \"2e-5\",          # Conservative fine-tuning LR (original was 5e-5)\n        \"--weight_decay\", \"0.007\", # Slightly higher than original 0.005\n        \"--drop_rate\", \"0.18\",    # Slightly higher than original 0.15\n        \"--label_smoothing\", \"0.13\", # Slightly higher than original 0.11\n        \"--mixup_alpha\", \"0.25\",  # Slightly higher than original 0.2\n        \"--ema_decay\", \"0.9998\",  # Slightly faster than original 0.9999\n        \"--warmup_epochs\", \"5\",   # Shorter than original 15\n        \"--device\", \"cuda\",\n        \"--use_soft_labels\"\n    ]\n    \n    # Validation checks\n    if not os.path.exists(\"checkpoints/best_model.pth\"):\n        print(\"‚ùå Error: checkpoints/best_model.pth not found!\")\n        print(\"   Make sure you have a trained model checkpoint.\")\n        return 1\n    \n    if not os.path.exists(\"./FERPlus\"):\n        print(\"‚ùå Error: ./FERPlus directory not found!\")\n        print(\"   Make sure the FERPlus dataset is in the current directory.\")\n        return 1\n    \n    print(\"üî• Starting optimized fine-tuning...\")\n    print(\"üìä Parameters based on successful original training:\")\n    print(\"   - Learning rate: 2e-5 (vs original 5e-5)\")\n    print(\"   - Weight decay: 0.007 (vs original 0.005)\")\n    print(\"   - Dropout: 0.18 (vs original 0.15)\")\n    print(\"   - Label smoothing: 0.13 (vs original 0.11)\")\n    print(\"   - Mixup alpha: 0.25 (vs original 0.2)\")\n    print(\"   - EMA decay: 0.9998 (vs original 0.9999)\")\n    print(\"   - Warmup: 5 epochs (vs original 15)\")\n    print(\"\")\n    \n    try:\n        # Run the command\n        result = subprocess.run(cmd, check=True)\n        print(\"\\n‚úÖ Fine-tuning completed successfully!\")\n        print(\"üìÅ Check the checkpoints/finetune_v2_optimized/ directory for results.\")\n        return result.returncode\n    except subprocess.CalledProcessError as e:\n        print(f\"\\n‚ùå Fine-tuning failed with error code {e.returncode}\")\n        return e.returncode\n    except KeyboardInterrupt:\n        print(\"\\n‚èπÔ∏è Fine-tuning interrupted by user\")\n        return 1\n    except Exception as e:\n        print(f\"\\n‚ùå Unexpected error: {e}\")\n        return 1\n\nif __name__ == \"__main__\":\n    exit_code = main()\n    sys.exit(exit_code) 